version: '3'

x-logging:
  &default-logging
  logging:
    driver: json-file
    options:
      max-size: 100m

services:
  #Algorun
  algorun_init:
    image: node:19-slim
    container_name: algorun_init
    profiles: ['init', 'algorun', 'all']
    volumes:
      - ./:/algorun
    working_dir: /algorun
    command: npm install

  algorun:
    image: node:19-slim
    container_name: algorun
    profiles: ['run', 'algorun', 'all']
    volumes:
      - ./:/algorun
    ports:
      - "3001:3000"
    working_dir: /algorun
    command: npx docusaurus start --host 0.0.0.0
    
  algorun_deploy:
    image: node:19
    container_name: algorun_deploy
    profiles: ['deploy', 'algorun', 'all']
    environment:
      - GIT_USER=$GIT_USER
      - GIT_PASS=$GIT_PASS
      - GIT_NAME=$GIT_NAME
      - GIT_MAIL=$GIT_MAIL
      - USE_SSH=$USE_SSH
      - CURRENT_BRANCH=$CURRENT_BRANCH
    volumes:
      - ./:/algorun
    restart: always
    working_dir: /algorun
    command: bash -c "git config --global user.email $GIT_MAIL && git config --global user.name $GIT_NAME && yarn deploy"
  
  middle:
    image: darlon/fastapi:1.0
    ports:
      - 8000:8000
    volumes:
      - ./server:/server
    restart: always
    command: uvicorn main:app --host=0.0.0.0 --port=8000 --reload
  
  server:
    image: judge0/judge0:1.13.0
    volumes:
      - ./judge0.conf:/judge0.conf:ro
    ports:
      - "2358:2358"
    privileged: true
    <<: *default-logging
    restart: always

  workers:
    image: judge0/judge0:1.13.0
    command: ["./scripts/workers"]
    volumes:
      - ./judge0.conf:/judge0.conf:ro
    privileged: true
    <<: *default-logging
    restart: always

  db:
    image: postgres:13.0
    env_file: judge0.conf
    volumes:
      - postgres-data:/var/lib/postgresql/data/
    <<: *default-logging
    restart: always

  redis:
    image: redis:6.0
    command: [
      "bash", "-c",
      'docker-entrypoint.sh --appendonly yes --requirepass "$$REDIS_PASSWORD"'
    ]
    env_file: judge0.conf
    volumes:
      - redis-data:/data
    <<: *default-logging
    restart: always

volumes:
  postgres-data:
  redis-data:
